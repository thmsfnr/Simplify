@startuml

class DeliveryFormFrame extends Application{
  + start(Stage stage) : void
}

class DeliveryInfoFrame extends Application{
  + start(Stage stage) : void
}

class DeliveryListFrame extends Application{
  + start(Stage stage) : void
}

abstract class Application {
  + start(Stage stage) : void
  + launch(String[] tab) : void
}

class DeliveryListController {
  + initialize(URL url, ResourceBundle resourceBundle) : void
  - cancel() : Boolean
  - switchToInfoFrame() : void
}

class DeliveryFormController {
  - create() : Boolean
}

class DeliveryInfoController {
  + initialize(URL url, ResourceBundle resourceBundle) : void
}

class Delivery{
  - idDelivery : Int
  - idUser : Int
  - idRestaurant : Int
  - date : Date
  - state : State
}

enum State {
  - WAITING
  - IN_PROGRESS
  - DELIVERED
}

class DeliveryFacade{
  - OrderDAO orderDAO
  - DeliveryDAO deliveryDAO
  + deleteDelivery(int idDelivery) : void
  + getAllMealOfDelivery(int idDelivery) : List<Meal>
  + getDeliveryById(int idDelivery) : Delivery
  + createDelivery(Delivery delivery) : Boolean
  + getAllDeliveries() : List<Delivery>
  + getAllDeliveriesOfUser(int idUser) : List<Delivery>
  + getInstance() : DeliveryFacade
}


abstract class AbstractDAOFactory{
  + getOrderDAO() : OrderDAO
  + getInstance() : AbstractDAOFactory
}

class PostGresDAOFactory extends AbstractDAOFactory{
  -ConnectionPostgres : ConnectionPostgres
}

class PostGresDeliveryDAO extends DeliveryDAO{}

abstract class MealDAO{
  + getAllMealOfDelivery(int idDelivery) : List<Meal>
 }

abstract class DeliveryDAO{
  + deleteDelivery(int idOrder) : void
  + getDeliveryById(int idDelivery) : Delivery
  + createDelivery(Delivery delivery) : Boolean
  + updateDelivery(Delivery delivery) : Boolean
  + getAllDeliveries() : List<Delivery>
  + getAllDeliveriesOfUser(int idUser) : List<Order>
}

class ConnectionPostgres{
  - url : String
  - user : String
  - password : String
  + getConnection() : Connection
}

class LocalStorage{
 + write(String key,Object value) : void
 + load(String key) : Object
}

DeliveryListController -> DeliveryFacade
DeliveryFormController -> DeliveryFacade
DeliveryInfoController -> DeliveryFacade

DeliveryListController -> Delivery
DeliveryInfoController -> Delivery
DeliveryFormController -> Delivery
DeliveryFacade --> Delivery

DeliveryListController --> LocalStorage

DeliveryListFrame -- DeliveryListController
DeliveryFormFrame -- DeliveryFormController
DeliveryInfoFrame -- DeliveryInfoController

DeliveryFacade -> DeliveryDAO
DeliveryFacade -> AbstractDAOFactory
DeliveryFacade -> MealDAO

Delivery --> State

PostGresDAOFactory --> ConnectionPostgres
PostGresDAOFactory -> PostGresDeliveryDAO
AbstractDAOFactory --> DeliveryDAO
AbstractDAOFactory --> MealDAO


@enduml

